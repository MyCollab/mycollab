package com.mycollab.common.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("ucd")
public class SaveSearchResultExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public SaveSearchResultExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    @SuppressWarnings("ucd")
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSaveuserIsNull() {
            addCriterion("saveUser is null");
            return (Criteria) this;
        }

        public Criteria andSaveuserIsNotNull() {
            addCriterion("saveUser is not null");
            return (Criteria) this;
        }

        public Criteria andSaveuserEqualTo(String value) {
            addCriterion("saveUser =", value, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserNotEqualTo(String value) {
            addCriterion("saveUser <>", value, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserGreaterThan(String value) {
            addCriterion("saveUser >", value, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserGreaterThanOrEqualTo(String value) {
            addCriterion("saveUser >=", value, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserLessThan(String value) {
            addCriterion("saveUser <", value, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserLessThanOrEqualTo(String value) {
            addCriterion("saveUser <=", value, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserLike(String value) {
            addCriterion("saveUser like", value, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserNotLike(String value) {
            addCriterion("saveUser not like", value, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserIn(List<String> values) {
            addCriterion("saveUser in", values, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserNotIn(List<String> values) {
            addCriterion("saveUser not in", values, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserBetween(String value1, String value2) {
            addCriterion("saveUser between", value1, value2, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaveuserNotBetween(String value1, String value2) {
            addCriterion("saveUser not between", value1, value2, "saveuser");
            return (Criteria) this;
        }

        public Criteria andSaccountidIsNull() {
            addCriterion("sAccountId is null");
            return (Criteria) this;
        }

        public Criteria andSaccountidIsNotNull() {
            addCriterion("sAccountId is not null");
            return (Criteria) this;
        }

        public Criteria andSaccountidEqualTo(Integer value) {
            addCriterion("sAccountId =", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotEqualTo(Integer value) {
            addCriterion("sAccountId <>", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidGreaterThan(Integer value) {
            addCriterion("sAccountId >", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidGreaterThanOrEqualTo(Integer value) {
            addCriterion("sAccountId >=", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidLessThan(Integer value) {
            addCriterion("sAccountId <", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidLessThanOrEqualTo(Integer value) {
            addCriterion("sAccountId <=", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidIn(List<Integer> values) {
            addCriterion("sAccountId in", values, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotIn(List<Integer> values) {
            addCriterion("sAccountId not in", values, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidBetween(Integer value1, Integer value2) {
            addCriterion("sAccountId between", value1, value2, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotBetween(Integer value1, Integer value2) {
            addCriterion("sAccountId not between", value1, value2, "saccountid");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIsNull() {
            addCriterion("createdTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIsNotNull() {
            addCriterion("createdTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeEqualTo(LocalDateTime value) {
            addCriterion("createdTime =", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotEqualTo(LocalDateTime value) {
            addCriterion("createdTime <>", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeGreaterThan(LocalDateTime value) {
            addCriterion("createdTime >", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("createdTime >=", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeLessThan(LocalDateTime value) {
            addCriterion("createdTime <", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("createdTime <=", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIn(List<LocalDateTime> values) {
            addCriterion("createdTime in", values, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotIn(List<LocalDateTime> values) {
            addCriterion("createdTime not in", values, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("createdTime between", value1, value2, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("createdTime not between", value1, value2, "createdtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIsNull() {
            addCriterion("lastUpdatedTime is null");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIsNotNull() {
            addCriterion("lastUpdatedTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeEqualTo(LocalDateTime value) {
            addCriterion("lastUpdatedTime =", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotEqualTo(LocalDateTime value) {
            addCriterion("lastUpdatedTime <>", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeGreaterThan(LocalDateTime value) {
            addCriterion("lastUpdatedTime >", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("lastUpdatedTime >=", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeLessThan(LocalDateTime value) {
            addCriterion("lastUpdatedTime <", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("lastUpdatedTime <=", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIn(List<LocalDateTime> values) {
            addCriterion("lastUpdatedTime in", values, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotIn(List<LocalDateTime> values) {
            addCriterion("lastUpdatedTime not in", values, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("lastUpdatedTime between", value1, value2, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("lastUpdatedTime not between", value1, value2, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andQuerynameIsNull() {
            addCriterion("queryName is null");
            return (Criteria) this;
        }

        public Criteria andQuerynameIsNotNull() {
            addCriterion("queryName is not null");
            return (Criteria) this;
        }

        public Criteria andQuerynameEqualTo(String value) {
            addCriterion("queryName =", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameNotEqualTo(String value) {
            addCriterion("queryName <>", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameGreaterThan(String value) {
            addCriterion("queryName >", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameGreaterThanOrEqualTo(String value) {
            addCriterion("queryName >=", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameLessThan(String value) {
            addCriterion("queryName <", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameLessThanOrEqualTo(String value) {
            addCriterion("queryName <=", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameLike(String value) {
            addCriterion("queryName like", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameNotLike(String value) {
            addCriterion("queryName not like", value, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameIn(List<String> values) {
            addCriterion("queryName in", values, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameNotIn(List<String> values) {
            addCriterion("queryName not in", values, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameBetween(String value1, String value2) {
            addCriterion("queryName between", value1, value2, "queryname");
            return (Criteria) this;
        }

        public Criteria andQuerynameNotBetween(String value1, String value2) {
            addCriterion("queryName not between", value1, value2, "queryname");
            return (Criteria) this;
        }

        public Criteria andIssharedIsNull() {
            addCriterion("isShared is null");
            return (Criteria) this;
        }

        public Criteria andIssharedIsNotNull() {
            addCriterion("isShared is not null");
            return (Criteria) this;
        }

        public Criteria andIssharedEqualTo(Boolean value) {
            addCriterion("isShared =", value, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedNotEqualTo(Boolean value) {
            addCriterion("isShared <>", value, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedGreaterThan(Boolean value) {
            addCriterion("isShared >", value, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isShared >=", value, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedLessThan(Boolean value) {
            addCriterion("isShared <", value, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedLessThanOrEqualTo(Boolean value) {
            addCriterion("isShared <=", value, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedIn(List<Boolean> values) {
            addCriterion("isShared in", values, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedNotIn(List<Boolean> values) {
            addCriterion("isShared not in", values, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedBetween(Boolean value1, Boolean value2) {
            addCriterion("isShared between", value1, value2, "isshared");
            return (Criteria) this;
        }

        public Criteria andIssharedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isShared not between", value1, value2, "isshared");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_save_search_result
     *
     * @mbg.generated do_not_delete_during_merge Sat Feb 09 11:42:26 CST 2019
     */
    @SuppressWarnings("ucd")
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_save_search_result
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    @SuppressWarnings("ucd")
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
package com.mycollab.module.project.domain;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("ucd")
public class ItemTimeLoggingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public ItemTimeLoggingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    @SuppressWarnings("ucd")
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNull() {
            addCriterion("projectId is null");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNotNull() {
            addCriterion("projectId is not null");
            return (Criteria) this;
        }

        public Criteria andProjectidEqualTo(Integer value) {
            addCriterion("projectId =", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotEqualTo(Integer value) {
            addCriterion("projectId <>", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThan(Integer value) {
            addCriterion("projectId >", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThanOrEqualTo(Integer value) {
            addCriterion("projectId >=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThan(Integer value) {
            addCriterion("projectId <", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThanOrEqualTo(Integer value) {
            addCriterion("projectId <=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidIn(List<Integer> values) {
            addCriterion("projectId in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotIn(List<Integer> values) {
            addCriterion("projectId not in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidBetween(Integer value1, Integer value2) {
            addCriterion("projectId between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotBetween(Integer value1, Integer value2) {
            addCriterion("projectId not between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeidIsNull() {
            addCriterion("typeId is null");
            return (Criteria) this;
        }

        public Criteria andTypeidIsNotNull() {
            addCriterion("typeId is not null");
            return (Criteria) this;
        }

        public Criteria andTypeidEqualTo(Integer value) {
            addCriterion("typeId =", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidNotEqualTo(Integer value) {
            addCriterion("typeId <>", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidGreaterThan(Integer value) {
            addCriterion("typeId >", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("typeId >=", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidLessThan(Integer value) {
            addCriterion("typeId <", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidLessThanOrEqualTo(Integer value) {
            addCriterion("typeId <=", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidIn(List<Integer> values) {
            addCriterion("typeId in", values, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidNotIn(List<Integer> values) {
            addCriterion("typeId not in", values, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidBetween(Integer value1, Integer value2) {
            addCriterion("typeId between", value1, value2, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidNotBetween(Integer value1, Integer value2) {
            addCriterion("typeId not between", value1, value2, "typeid");
            return (Criteria) this;
        }

        public Criteria andLogvalueIsNull() {
            addCriterion("logValue is null");
            return (Criteria) this;
        }

        public Criteria andLogvalueIsNotNull() {
            addCriterion("logValue is not null");
            return (Criteria) this;
        }

        public Criteria andLogvalueEqualTo(Double value) {
            addCriterion("logValue =", value, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueNotEqualTo(Double value) {
            addCriterion("logValue <>", value, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueGreaterThan(Double value) {
            addCriterion("logValue >", value, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueGreaterThanOrEqualTo(Double value) {
            addCriterion("logValue >=", value, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueLessThan(Double value) {
            addCriterion("logValue <", value, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueLessThanOrEqualTo(Double value) {
            addCriterion("logValue <=", value, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueIn(List<Double> values) {
            addCriterion("logValue in", values, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueNotIn(List<Double> values) {
            addCriterion("logValue not in", values, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueBetween(Double value1, Double value2) {
            addCriterion("logValue between", value1, value2, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLogvalueNotBetween(Double value1, Double value2) {
            addCriterion("logValue not between", value1, value2, "logvalue");
            return (Criteria) this;
        }

        public Criteria andLoguserIsNull() {
            addCriterion("logUser is null");
            return (Criteria) this;
        }

        public Criteria andLoguserIsNotNull() {
            addCriterion("logUser is not null");
            return (Criteria) this;
        }

        public Criteria andLoguserEqualTo(String value) {
            addCriterion("logUser =", value, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserNotEqualTo(String value) {
            addCriterion("logUser <>", value, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserGreaterThan(String value) {
            addCriterion("logUser >", value, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserGreaterThanOrEqualTo(String value) {
            addCriterion("logUser >=", value, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserLessThan(String value) {
            addCriterion("logUser <", value, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserLessThanOrEqualTo(String value) {
            addCriterion("logUser <=", value, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserLike(String value) {
            addCriterion("logUser like", value, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserNotLike(String value) {
            addCriterion("logUser not like", value, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserIn(List<String> values) {
            addCriterion("logUser in", values, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserNotIn(List<String> values) {
            addCriterion("logUser not in", values, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserBetween(String value1, String value2) {
            addCriterion("logUser between", value1, value2, "loguser");
            return (Criteria) this;
        }

        public Criteria andLoguserNotBetween(String value1, String value2) {
            addCriterion("logUser not between", value1, value2, "loguser");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIsNull() {
            addCriterion("createdTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIsNotNull() {
            addCriterion("createdTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeEqualTo(LocalDateTime value) {
            addCriterion("createdTime =", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotEqualTo(LocalDateTime value) {
            addCriterion("createdTime <>", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeGreaterThan(LocalDateTime value) {
            addCriterion("createdTime >", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("createdTime >=", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeLessThan(LocalDateTime value) {
            addCriterion("createdTime <", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("createdTime <=", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIn(List<LocalDateTime> values) {
            addCriterion("createdTime in", values, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotIn(List<LocalDateTime> values) {
            addCriterion("createdTime not in", values, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("createdTime between", value1, value2, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("createdTime not between", value1, value2, "createdtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIsNull() {
            addCriterion("lastUpdatedTime is null");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIsNotNull() {
            addCriterion("lastUpdatedTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeEqualTo(LocalDateTime value) {
            addCriterion("lastUpdatedTime =", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotEqualTo(LocalDateTime value) {
            addCriterion("lastUpdatedTime <>", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeGreaterThan(LocalDateTime value) {
            addCriterion("lastUpdatedTime >", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("lastUpdatedTime >=", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeLessThan(LocalDateTime value) {
            addCriterion("lastUpdatedTime <", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("lastUpdatedTime <=", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIn(List<LocalDateTime> values) {
            addCriterion("lastUpdatedTime in", values, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotIn(List<LocalDateTime> values) {
            addCriterion("lastUpdatedTime not in", values, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("lastUpdatedTime between", value1, value2, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("lastUpdatedTime not between", value1, value2, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andSaccountidIsNull() {
            addCriterion("sAccountId is null");
            return (Criteria) this;
        }

        public Criteria andSaccountidIsNotNull() {
            addCriterion("sAccountId is not null");
            return (Criteria) this;
        }

        public Criteria andSaccountidEqualTo(Integer value) {
            addCriterion("sAccountId =", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotEqualTo(Integer value) {
            addCriterion("sAccountId <>", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidGreaterThan(Integer value) {
            addCriterion("sAccountId >", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidGreaterThanOrEqualTo(Integer value) {
            addCriterion("sAccountId >=", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidLessThan(Integer value) {
            addCriterion("sAccountId <", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidLessThanOrEqualTo(Integer value) {
            addCriterion("sAccountId <=", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidIn(List<Integer> values) {
            addCriterion("sAccountId in", values, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotIn(List<Integer> values) {
            addCriterion("sAccountId not in", values, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidBetween(Integer value1, Integer value2) {
            addCriterion("sAccountId between", value1, value2, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotBetween(Integer value1, Integer value2) {
            addCriterion("sAccountId not between", value1, value2, "saccountid");
            return (Criteria) this;
        }

        public Criteria andLogfordayIsNull() {
            addCriterion("logForDay is null");
            return (Criteria) this;
        }

        public Criteria andLogfordayIsNotNull() {
            addCriterion("logForDay is not null");
            return (Criteria) this;
        }

        public Criteria andLogfordayEqualTo(LocalDate value) {
            addCriterion("logForDay =", value, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayNotEqualTo(LocalDate value) {
            addCriterion("logForDay <>", value, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayGreaterThan(LocalDate value) {
            addCriterion("logForDay >", value, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("logForDay >=", value, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayLessThan(LocalDate value) {
            addCriterion("logForDay <", value, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayLessThanOrEqualTo(LocalDate value) {
            addCriterion("logForDay <=", value, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayIn(List<LocalDate> values) {
            addCriterion("logForDay in", values, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayNotIn(List<LocalDate> values) {
            addCriterion("logForDay not in", values, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayBetween(LocalDate value1, LocalDate value2) {
            addCriterion("logForDay between", value1, value2, "logforday");
            return (Criteria) this;
        }

        public Criteria andLogfordayNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("logForDay not between", value1, value2, "logforday");
            return (Criteria) this;
        }

        public Criteria andIsbillableIsNull() {
            addCriterion("isBillable is null");
            return (Criteria) this;
        }

        public Criteria andIsbillableIsNotNull() {
            addCriterion("isBillable is not null");
            return (Criteria) this;
        }

        public Criteria andIsbillableEqualTo(Boolean value) {
            addCriterion("isBillable =", value, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableNotEqualTo(Boolean value) {
            addCriterion("isBillable <>", value, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableGreaterThan(Boolean value) {
            addCriterion("isBillable >", value, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isBillable >=", value, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableLessThan(Boolean value) {
            addCriterion("isBillable <", value, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableLessThanOrEqualTo(Boolean value) {
            addCriterion("isBillable <=", value, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableIn(List<Boolean> values) {
            addCriterion("isBillable in", values, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableNotIn(List<Boolean> values) {
            addCriterion("isBillable not in", values, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableBetween(Boolean value1, Boolean value2) {
            addCriterion("isBillable between", value1, value2, "isbillable");
            return (Criteria) this;
        }

        public Criteria andIsbillableNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isBillable not between", value1, value2, "isbillable");
            return (Criteria) this;
        }

        public Criteria andCreateduserIsNull() {
            addCriterion("createdUser is null");
            return (Criteria) this;
        }

        public Criteria andCreateduserIsNotNull() {
            addCriterion("createdUser is not null");
            return (Criteria) this;
        }

        public Criteria andCreateduserEqualTo(String value) {
            addCriterion("createdUser =", value, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserNotEqualTo(String value) {
            addCriterion("createdUser <>", value, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserGreaterThan(String value) {
            addCriterion("createdUser >", value, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserGreaterThanOrEqualTo(String value) {
            addCriterion("createdUser >=", value, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserLessThan(String value) {
            addCriterion("createdUser <", value, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserLessThanOrEqualTo(String value) {
            addCriterion("createdUser <=", value, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserLike(String value) {
            addCriterion("createdUser like", value, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserNotLike(String value) {
            addCriterion("createdUser not like", value, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserIn(List<String> values) {
            addCriterion("createdUser in", values, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserNotIn(List<String> values) {
            addCriterion("createdUser not in", values, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserBetween(String value1, String value2) {
            addCriterion("createdUser between", value1, value2, "createduser");
            return (Criteria) this;
        }

        public Criteria andCreateduserNotBetween(String value1, String value2) {
            addCriterion("createdUser not between", value1, value2, "createduser");
            return (Criteria) this;
        }

        public Criteria andIsovertimeIsNull() {
            addCriterion("isOvertime is null");
            return (Criteria) this;
        }

        public Criteria andIsovertimeIsNotNull() {
            addCriterion("isOvertime is not null");
            return (Criteria) this;
        }

        public Criteria andIsovertimeEqualTo(Boolean value) {
            addCriterion("isOvertime =", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeNotEqualTo(Boolean value) {
            addCriterion("isOvertime <>", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeGreaterThan(Boolean value) {
            addCriterion("isOvertime >", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isOvertime >=", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeLessThan(Boolean value) {
            addCriterion("isOvertime <", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeLessThanOrEqualTo(Boolean value) {
            addCriterion("isOvertime <=", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeIn(List<Boolean> values) {
            addCriterion("isOvertime in", values, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeNotIn(List<Boolean> values) {
            addCriterion("isOvertime not in", values, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeBetween(Boolean value1, Boolean value2) {
            addCriterion("isOvertime between", value1, value2, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isOvertime not between", value1, value2, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsapprovedIsNull() {
            addCriterion("isApproved is null");
            return (Criteria) this;
        }

        public Criteria andIsapprovedIsNotNull() {
            addCriterion("isApproved is not null");
            return (Criteria) this;
        }

        public Criteria andIsapprovedEqualTo(Boolean value) {
            addCriterion("isApproved =", value, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedNotEqualTo(Boolean value) {
            addCriterion("isApproved <>", value, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedGreaterThan(Boolean value) {
            addCriterion("isApproved >", value, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isApproved >=", value, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedLessThan(Boolean value) {
            addCriterion("isApproved <", value, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedLessThanOrEqualTo(Boolean value) {
            addCriterion("isApproved <=", value, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedIn(List<Boolean> values) {
            addCriterion("isApproved in", values, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedNotIn(List<Boolean> values) {
            addCriterion("isApproved not in", values, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedBetween(Boolean value1, Boolean value2) {
            addCriterion("isApproved between", value1, value2, "isapproved");
            return (Criteria) this;
        }

        public Criteria andIsapprovedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isApproved not between", value1, value2, "isapproved");
            return (Criteria) this;
        }

        public Criteria andApproveuserIsNull() {
            addCriterion("approveUser is null");
            return (Criteria) this;
        }

        public Criteria andApproveuserIsNotNull() {
            addCriterion("approveUser is not null");
            return (Criteria) this;
        }

        public Criteria andApproveuserEqualTo(String value) {
            addCriterion("approveUser =", value, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserNotEqualTo(String value) {
            addCriterion("approveUser <>", value, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserGreaterThan(String value) {
            addCriterion("approveUser >", value, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserGreaterThanOrEqualTo(String value) {
            addCriterion("approveUser >=", value, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserLessThan(String value) {
            addCriterion("approveUser <", value, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserLessThanOrEqualTo(String value) {
            addCriterion("approveUser <=", value, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserLike(String value) {
            addCriterion("approveUser like", value, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserNotLike(String value) {
            addCriterion("approveUser not like", value, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserIn(List<String> values) {
            addCriterion("approveUser in", values, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserNotIn(List<String> values) {
            addCriterion("approveUser not in", values, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserBetween(String value1, String value2) {
            addCriterion("approveUser between", value1, value2, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApproveuserNotBetween(String value1, String value2) {
            addCriterion("approveUser not between", value1, value2, "approveuser");
            return (Criteria) this;
        }

        public Criteria andApprovetimeIsNull() {
            addCriterion("approveTime is null");
            return (Criteria) this;
        }

        public Criteria andApprovetimeIsNotNull() {
            addCriterion("approveTime is not null");
            return (Criteria) this;
        }

        public Criteria andApprovetimeEqualTo(LocalDateTime value) {
            addCriterion("approveTime =", value, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeNotEqualTo(LocalDateTime value) {
            addCriterion("approveTime <>", value, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeGreaterThan(LocalDateTime value) {
            addCriterion("approveTime >", value, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("approveTime >=", value, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeLessThan(LocalDateTime value) {
            addCriterion("approveTime <", value, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("approveTime <=", value, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeIn(List<LocalDateTime> values) {
            addCriterion("approveTime in", values, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeNotIn(List<LocalDateTime> values) {
            addCriterion("approveTime not in", values, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("approveTime between", value1, value2, "approvetime");
            return (Criteria) this;
        }

        public Criteria andApprovetimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("approveTime not between", value1, value2, "approvetime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated do_not_delete_during_merge Sat Feb 09 11:42:26 CST 2019
     */
    @SuppressWarnings("ucd")
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_time_logging
     *
     * @mbg.generated Sat Feb 09 11:42:26 CST 2019
     */
    @SuppressWarnings("ucd")
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}